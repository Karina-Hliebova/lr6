#include <iostream>
#include "windows.h"
#include <cmath>
using namespace std;

//Array40. Дано число R і масив A розміру N. Знайти елемент масиву, який найбільш 
//близький до числа R (тобто такий елемент AK, для якого величина | AK - R | є мінімальною).
void task_1(); //завдання 1, декларація функції

//Array79. Дан масив розміру N. Здійснити зрушення елементів масиву вправо на одну позицію
//(при цьому A1 перейде в A2, A2 - в A3, ..., AN-1 - в AN, a початкове значення останнього
//елемента буде втрачено). Перший елемент отриманого масиву покласти рівним 0.
void task_2(); //завдання 2, декларація функції

int main() {
    SetConsoleOutputCP(1251);
    int menu; // зміна для номеру завдання
    do
    { // початок циклу
        cout << "Номер завдання:"; //введення номеру завдання
        cin >> menu; // обирання номеру завдання
        cout << endl; //вільна строка
        switch (menu) {
        case 1: task_1(); break; // 1 - завдання 1
        case 2: task_2(); break; // 2 - завдання 2
        case -1: cout << "Вихід..." << endl; break; // -1 - вихід
        default: cout << "Помилка! Лише 1, 2!" << endl; // інший номер - повторити
        }
        cout << endl; // вільна строка
        cout << "+---------------------+" << endl; // строка задля полегшення візуального сприймання тексту
        cout << endl; // вільна строка
    } // кінець циклу
    while (menu != -1); // умова виконання циклу
    return 0;
}

void task_1() {
    int N, R;

    cout << "Введіть розмір масиву N: "; // введення розміру масиву
    cin >> N;

    int* A = new int[N]; // динамічне виділення пам'яті для масиву

    cout << "Введіть елементи масиву: ";
    for (int i = 0; i < N; i++) {
        cin >> A[i]; // вводення елементів масиву
    }

    cout << "Введіть число R: "; // введення числа 
    cin >> R;

    cout << "Масив: ";  // виведення масиву
    for (int i = 0; i < N; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    // знаходження найближчого елементу до числа R
    int closestElement = A[0]; // початково найближчий елемент
    int minDiff = abs(A[0] - R); // початкова різниця (відстань) між першим елементом та R

    for (int i = 1; i < N; i++) {
        int currentDiff = abs(A[i] - R); // поточна різниця
        if (currentDiff < minDiff) {
            minDiff = currentDiff; // оновлена мінімальна різниця
            closestElement = A[i]; // оновлений найближчий елемент
        }
    }

    // виведення результату
    cout << "Елемент масиву, найбільш близький до числа R: " << closestElement << endl;

    delete[] A; // звільняємо пам'ять після використання масиву
}

void task_2() {
    int N;

    cout << "Введіть розмір масиву N: ";  // введення розміру масиву
    cin >> N;

    int* A = new int[N]; // динамічне виділення пам'яті для масиву

    cout << "Введіть елементи масиву: "; // введення елементів масиву
    for (int i = 0; i < N; i++) {
        cin >> A[i]; 
    }

    cout << "Початковий масив: "; // виведення початкового масиву
    for (int i = 0; i < N; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    // зрушення елементів вправо на одну позицію
    for (int i = N - 1; i > 0; i--) {
        A[i] = A[i - 1]; // переміщення кожного елементу на наступну позицію вправо
    }

    A[0] = 0;  // перший елемент масиву стає рівним 0

    cout << "Змінений масив: "; // виведення зміненого масиву
    for (int i = 0; i < N; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    delete[] A; // звільнення пам'ять після використання масиву
}

